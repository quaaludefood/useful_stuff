stages:
  - lint
  - test
  - build
  - deploy_dev
  - deploy_test
  - deploy_staging
  - deploy_prod


workflow:
  rules:
    - if: ( $CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+.*$/ || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH =~ /^feature\/.*$/ )
      when: always
    - when: never #never run otherwise

run-unit-tests:
  tags:
    - platform-generic
  stage: test
  image: docker:20.10.16
  except:
    - schedules
    - tags
  allow_failure: true
  script:
    - apk add make docker-compose
    - make cov-html
  variables:
    FLASK_APP_SECRET_KEY: "any-secret-for-unit-tests"
    # disable TLS to make docker service working correctly on gitlab runner
    # (based on slack advise from DevOps Team)
    DOCKER_HOST: tcp://docker:2376

    DOCKER_TLS_CERTDIR: "/certs"

    DOCKER_TLS_VERIFY: 1

    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  coverage: '/^TOTAL.+?(\d+\%)$/'
  services:
    - docker:20.10.16-dind

check-lint:
  tags:
    - platform-generic
  stage: lint
  image: python:3.11-bookworm
  except:
    - schedules
    - tags
  script:
    - apt update
    - apt install --yes libldap2-dev ldap-utils libsasl2-dev gcc libpq-dev
    - pip install poetry
    - make lint


.build-defaults:
  tags:
    - platform-generic
  stage: build
  image: docker:20.10.16
  variables:
    DOCKER_HOST: tcp://docker:2376

    DOCKER_TLS_CERTDIR: "/certs"

    DOCKER_TLS_VERIFY: 1

    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  before_script:
    # First authenticate to gitlab registry. See: https://docs.gitlab.com/ee/user/packages/container_registry/#authenticating-to-the-container-registry-with-gitlab-cicd
    # and https://docs.gitlab.com/ee/user/packages/container_registry/#build-and-push-images-using-gitlab-cicd
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  services:
    - docker:20.10.16-dind

build:
  extends: .build-defaults
  script:
    - apk add make docker-compose
    - make build-image

###############################################
#                                             #
#                  Deployment                 #
#                                             #
###############################################

.deploy:
  image: docker:19.03.12-git
  script:
    - apk add make docker-compose
    - make deploy
  variables:
    COMPOSE_TLS_VERSION: "TLSv1.2"
    DOCKER_TLS_VERIFY: "1"
    DOCKER_CERT_PATH: "dm_certs"
  tags:
    - platform-generic

.development-env:
  rules:
    - if: $CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+.*$/
      when: never
    - when: always
  environment:
    name: development

.test-env:
  environment:
    name: test
  rules:
    - if: $CI_COMMIT_BRANCH == 'develop' && $CI_PIPELINE_SOURCE != 'schedule'
      when: manual

.staging-env:
  environment:
    name: staging
  rules:
    - if: $CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+.*$/
      when: manual

.prod-env:
  environment:
    name: PROD
  rules:
    - if: $CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/
      when: manual

deploy_dev:
  extends:
    - .deploy
    - .development-env
  stage: deploy_dev

deploy_test:
  extends:
    - .deploy
    - .test-env
  stage: deploy_test

deploy_staging:
  extends:
    - .deploy
    - .staging-env
  stage: deploy_staging

deploy_prod:
  extends:
    - .deploy
    - .prod-env
  stage: deploy_prod


